(()=>{"use strict";var e={28:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,"\nbody {\n    margin: 0;\n}\n.overlay {\n    position: fixed;\n    display: none;\n    background-color: rgba(104,104,104,0.8);\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n#content {\n    display: grid;\n    grid-template-columns: 2fr 5fr;\n    grid-template-rows: .75fr 9fr;\n    min-height: 100vh;\n}\nheader {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    background-color: #3777FF;\n}\n.categories {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    background-color: #e7e5e4;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n}\n.items {\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: #fcfcfc;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.category-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 15px;\n    height: 70vh;\n    width: 80%;\n}\n.category-title {\n    margin: 0;\n}\n.list-container {\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    width: 90%;\n    padding: 0;\n    gap: 2px;\n}\n.task-item {\n    display: flex;\n    flex-flow: column;\n    align-items: flex-start;\n    gap:10px;\n    flex-shrink: 1;\n    border: 2px black solid;\n    border-radius: 15px;\n    min-width: 75%;\n    max-height: 15vh;\n    margin: .2rem;\n    padding: 1rem;\n}\n.add-item-container{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 30vw;\n    height: 30vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\n.newTaskButton {\n    width: 25%;\n    min-width: 100px;\n    background-color: #3777FF;\n    border-radius: 10px;\n    margin: .8rem;\n}\n.category-list {\n    width: 80%;\n    padding: 0;\n    gap: 25px;\n    list-style-type: none;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:";AACA;IACI,SAAS;AACb;AACA;IACI,eAAe;IACf,aAAa;IACb,uCAAuC;IACvC,UAAU;IACV,OAAO;IACP,MAAM;IACN,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,6BAA6B;IAC7B,iBAAiB;AACrB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,yBAAyB;AAC7B;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;IACZ,UAAU;AACd;AACA;IACI,SAAS;AACb;AACA;IACI,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,UAAU;IACV,UAAU;IACV,QAAQ;AACZ;AACA;IACI,aAAa;IACb,iBAAiB;IACjB,uBAAuB;IACvB,QAAQ;IACR,cAAc;IACd,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,aAAa;AACjB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,4BAA4B;IAC5B,YAAY;IACZ,cAAc;IACd,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,uBAAuB;AAC3B;AACA;IACI,UAAU;IACV,gBAAgB;IAChB,yBAAyB;IACzB,mBAAmB;IACnB,aAAa;AACjB;AACA;IACI,UAAU;IACV,UAAU;IACV,SAAS;IACT,qBAAqB;AACzB",sourcesContent:["\nbody {\n    margin: 0;\n}\n.overlay {\n    position: fixed;\n    display: none;\n    background-color: rgba(104,104,104,0.8);\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n#content {\n    display: grid;\n    grid-template-columns: 2fr 5fr;\n    grid-template-rows: .75fr 9fr;\n    min-height: 100vh;\n}\nheader {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    background-color: #3777FF;\n}\n.categories {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    background-color: #e7e5e4;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n}\n.items {\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: #fcfcfc;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.category-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 15px;\n    height: 70vh;\n    width: 80%;\n}\n.category-title {\n    margin: 0;\n}\n.list-container {\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    width: 90%;\n    padding: 0;\n    gap: 2px;\n}\n.task-item {\n    display: flex;\n    flex-flow: column;\n    align-items: flex-start;\n    gap:10px;\n    flex-shrink: 1;\n    border: 2px black solid;\n    border-radius: 15px;\n    min-width: 75%;\n    max-height: 15vh;\n    margin: .2rem;\n    padding: 1rem;\n}\n.add-item-container{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 30vw;\n    height: 30vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\n.newTaskButton {\n    width: 25%;\n    min-width: 100px;\n    background-color: #3777FF;\n    border-radius: 10px;\n    margin: .8rem;\n}\n.category-list {\n    width: 80%;\n    padding: 0;\n    gap: 25px;\n    list-style-type: none;\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],c=0;c<e.length;c++){var s=e[c],l=r.base?s[0]+r.base:s[0],d=i[l]||0,A="".concat(l," ").concat(d);i[l]=d+1;var u=t(A),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var p=o(m,r);r.byIndex=c,n.splice(c,0,{identifier:A,updater:p,references:1})}a.push(A)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var s=r(e,o),l=0;l<i.length;l++){var d=t(i[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{class e{constructor(e,n,t,r){this.title=e,this.description=n,this.dueDate=t,this.priorityLevel=r,this.status="To Do",this.notes,this.checklist=[]}}class n{constructor(e){this.title=e,this.taskItems=[]}addItem(e){this.taskItems.push(e)}set allTasks(e){1==Array.isArray(e)&&(this.taskItems=e)}}function r(){const e={},t=JSON.parse(window.localStorage.getItem("categories"));for(const r in t){const o=new n(`${r}`),i=t[r].taskItems;for(const e of i)o.addItem(e);e[o.title]=o}return e}function o(e){const n=r()[e];window.localStorage.setItem("currentCategory",JSON.stringify(n))}var i=t(379),a=t.n(i),c=t(795),s=t.n(c),l=t(569),d=t.n(l),A=t(565),u=t.n(A),m=t(216),p=t.n(m),f=t(589),g=t.n(f),y=t(28),C={};let h,I,B,v;if(C.styleTagTransform=g(),C.setAttributes=u(),C.insert=d().bind(null,"head"),C.domAPI=s(),C.insertStyleElement=p(),a()(y.Z,C),y.Z&&y.Z.locals&&y.Z.locals,function(e){const n=document.createElement("header");n.innerHTML="task's";const t=document.createElement("div"),r=document.createElement("div"),o=[n,t,r];t.classList.add("categories"),r.classList.add("items"),o.forEach((n=>{e.appendChild(n)})),function(){const e=document.querySelector(".items"),n=document.createElement("button");n.type="button",n.classList.add("newTaskButton"),n.textContent="New Task",n.addEventListener("click",(()=>{document.querySelector("#add-task-overlay").style.display="flex"})),e.appendChild(n)}(),function(){const e=document.querySelector(".categories"),n=document.createElement("button");n.type="button",n.classList.add("newCategoryButton"),n.textContent="New Category",n.addEventListener("click",(()=>{document.querySelector("#category-overlay").style.display="flex"})),e.appendChild(n)}();const i=document.createElement("div"),a=document.createElement("h3"),c=document.createElement("ul");i.classList.add("category-container"),a.classList.add("category-title"),c.classList.add("list-container"),i.appendChild(a),i.appendChild(c),r.appendChild(i);const s=document.createElement("ul");s.classList.add("category-list"),t.appendChild(s)}(document.querySelector("#content")),null==window.localStorage.getItem("categories")){const e={title:"Default",taskItems:[]};I={Default:e},h=new n(e.title),window.localStorage.setItem("categories",JSON.stringify(I)),window.localStorage.setItem("currentCategory",JSON.stringify(e))}else B=JSON.parse(window.localStorage.getItem("currentCategory")),v=JSON.parse(window.localStorage.getItem("categories")),h=new n(B.title),h.taskItems=B.taskItems,I=r();!function(e){const n=document.querySelector(".category-list");for(;n.firstChild;)n.removeChild(n.firstChild);for(const t in e){let e=document.createElement("li");e.classList.add("category-name"),e.innerHTML=`${t}`,n.appendChild(e)}}(I),function(e,n){const t=document.querySelector(".list-container"),r=(document.querySelector(".category-container"),document.querySelector(".category-title"));for(;t.firstChild;)t.removeChild(t.firstChild);r.innerHTML=e,n.forEach((e=>{!function(e,n,t){const r=document.createElement("li"),o=document.createElement("div"),i=document.createElement("div");o.innerHTML=n,i.innerHTML=t,[o,i].forEach((e=>{r.appendChild(e)})),r.classList.add("task-item"),e.appendChild(r)}(t,e.title,e.date)}))}(h.title,h.taskItems),function(n){const t=document.querySelector(".add-task-button"),i=document.querySelector("#task-form"),a=document.querySelector("#task-overlay"),c=(document.querySelector(".category-title").innerHTML,n);t.addEventListener("click",(()=>{const n=function(){const e=document.querySelector("#taskTitle"),n=document.querySelector("#taskDescription"),t=document.querySelector("#taskDueDate");return{title:e.value,description:n.value,date:t.value}}();!function(e,n){const t=r();t[e].taskItems.push(n),window.localStorage.categories=JSON.stringify(t)}(c.title,n),o(c.title),new e(n.title,n.description,n.date),i.reset(),location.reload(),a.style.display=""}))}(h),function(){const e=document.querySelector(".add-category-button"),n=document.querySelector("#category-form"),t=document.querySelector("#category-overlay");e.addEventListener("click",(()=>{!function(e){const n=r();n[e]={title:e,taskItems:[]},window.localStorage.categories=JSON.stringify(n)}(document.querySelector("#newCategoryTitle").value),n.reset(),location.reload(),t.style.display=""}))}(),function(){const e=document.querySelectorAll(".cancel-button"),n=document.querySelectorAll("form"),t=document.querySelectorAll(".overlay");e.forEach((e=>{e.addEventListener("click",(()=>{n.forEach((e=>{e.reset()})),t.forEach((e=>{e.style.display=""}))}))}))}(),function(e){document.querySelectorAll(".category-name").forEach((n=>{n.addEventListener("click",(()=>{o(e[`${n.innerHTML}`].title),location.reload()}))}))}(I),document.querySelectorAll(".task-item").forEach((e=>{e.addEventListener("click",(()=>{document.querySelector("#view-task-overlay").style.display="flex"}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxFQUFNbkQsU0FBU3NELElBQ1hBLEVBQUtkLE9BQU0sSUFFZlksRUFBU3BELFNBQVN1RCxJQUNkQSxFQUFRbEosTUFBTWlHLFFBQVUsRUFBRSxHQUM3QixHQUNKLEdBR1QsQ0ZoQkFrRCxHRWtCQSxTQUFpQzdFLEdBQ1BuRSxTQUFTMEksaUJBQWlCLGtCQUNsQ2xELFNBQVV4SixJQUNwQkEsRUFBSzZKLGlCQUFpQixTQUFTLEtBRTNCbEIsRUFEd0JSLEVBQVcsR0FBR25JLEVBQUttSixhQUNSaEMsT0FDbkM4RSxTQUFTQyxRQUFRLEdBRXBCLEdBRVQsQ0YzQkFlLENBQXdCOUUsR0U4QkhuRSxTQUFTMEksaUJBQWlCLGNBQ2xDbEQsU0FBU3hKLElBQ2RBLEVBQUs2SixpQkFBaUIsU0FBUyxLQUNYN0YsU0FBU0MsY0FBYyxzQkFDL0JKLE1BQU1pRyxRQUFVLE1BQU0sR0FDakMsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZXMuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvdG8tZG8ncy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaGFuZGxlcnMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlcy5jc3M/NDRiMiIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21haW4tcGFnZS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvYnV0dG9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIlxcbmJvZHkge1xcbiAgICBtYXJnaW46IDA7XFxufVxcbi5vdmVybGF5IHtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEwNCwxMDQsMTA0LDAuOCk7XFxuICAgIHotaW5kZXg6IDE7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgd2lkdGg6IDEwMHZ3O1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuI2NvbnRlbnQge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciA1ZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogLjc1ZnIgOWZyO1xcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcXG59XFxuaGVhZGVyIHtcXG4gICAgZ3JpZC1jb2x1bW46IDEgLyAzO1xcbiAgICBncmlkLXJvdzogMSAvIDI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNzc3RkY7XFxufVxcbi5jYXRlZ29yaWVzIHtcXG4gICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xcbiAgICBncmlkLXJvdzogMiAvIDM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlN2U1ZTQ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIFxcbn1cXG4uaXRlbXMge1xcbiAgICBncmlkLWNvbHVtbjogMiAvIDM7XFxuICAgIGdyaWQtcm93OiAyIC8gMztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmYztcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuLmNhdGVnb3J5LWNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxuICAgIGhlaWdodDogNzB2aDtcXG4gICAgd2lkdGg6IDgwJTtcXG59XFxuLmNhdGVnb3J5LXRpdGxlIHtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG4ubGlzdC1jb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWZsb3c6IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDkwJTtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgZ2FwOiAycHg7XFxufVxcbi50YXNrLWl0ZW0ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWZsb3c6IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuICAgIGdhcDoxMHB4O1xcbiAgICBmbGV4LXNocmluazogMTtcXG4gICAgYm9yZGVyOiAycHggYmxhY2sgc29saWQ7XFxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxuICAgIG1pbi13aWR0aDogNzUlO1xcbiAgICBtYXgtaGVpZ2h0OiAxNXZoO1xcbiAgICBtYXJnaW46IC4ycmVtO1xcbiAgICBwYWRkaW5nOiAxcmVtO1xcbn1cXG4uYWRkLWl0ZW0tY29udGFpbmVye1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcXG4gICAgbWFyZ2luOiBhdXRvO1xcbiAgICBwYWRkaW5nOiAxLjVlbTtcXG4gICAgd2lkdGg6IDMwdnc7XFxuICAgIGhlaWdodDogMzB2aDtcXG4gICAgZm9udC1zaXplOiAxLjVyZW07XFxuICAgIGJvcmRlcjogMnB4IGJsYWNrIHNvbGlkO1xcbn1cXG4ubmV3VGFza0J1dHRvbiB7XFxuICAgIHdpZHRoOiAyNSU7XFxuICAgIG1pbi13aWR0aDogMTAwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNzc3RkY7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIG1hcmdpbjogLjhyZW07XFxufVxcbi5jYXRlZ29yeS1saXN0IHtcXG4gICAgd2lkdGg6IDgwJTtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgZ2FwOiAyNXB4O1xcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCI7QUFDQTtJQUNJLFNBQVM7QUFDYjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGFBQWE7SUFDYix1Q0FBdUM7SUFDdkMsVUFBVTtJQUNWLE9BQU87SUFDUCxNQUFNO0lBQ04sWUFBWTtJQUNaLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLDZCQUE2QjtJQUM3QixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjs7QUFFdkI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLFVBQVU7QUFDZDtBQUNBO0lBQ0ksU0FBUztBQUNiO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixVQUFVO0lBQ1YsVUFBVTtJQUNWLFFBQVE7QUFDWjtBQUNBO0lBQ0ksYUFBYTtJQUNiLGlCQUFpQjtJQUNqQix1QkFBdUI7SUFDdkIsUUFBUTtJQUNSLGNBQWM7SUFDZCx1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGFBQWE7QUFDakI7QUFDQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3Qiw0QkFBNEI7SUFDNUIsWUFBWTtJQUNaLGNBQWM7SUFDZCxXQUFXO0lBQ1gsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQix1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLG1CQUFtQjtJQUNuQixhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxVQUFVO0lBQ1YsVUFBVTtJQUNWLFNBQVM7SUFDVCxxQkFBcUI7QUFDekJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiXFxuYm9keSB7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuLm92ZXJsYXkge1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTA0LDEwNCwxMDQsMC44KTtcXG4gICAgei1pbmRleDogMTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICB3aWR0aDogMTAwdnc7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4jY29udGVudCB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDVmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAuNzVmciA5ZnI7XFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbn1cXG5oZWFkZXIge1xcbiAgICBncmlkLWNvbHVtbjogMSAvIDM7XFxuICAgIGdyaWQtcm93OiAxIC8gMjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzM3NzdGRjtcXG59XFxuLmNhdGVnb3JpZXMge1xcbiAgICBncmlkLWNvbHVtbjogMSAvIDI7XFxuICAgIGdyaWQtcm93OiAyIC8gMztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTVlNDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgXFxufVxcbi5pdGVtcyB7XFxuICAgIGdyaWQtY29sdW1uOiAyIC8gMztcXG4gICAgZ3JpZC1yb3c6IDIgLyAzO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmNmY2ZjO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4uY2F0ZWdvcnktY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXG4gICAgaGVpZ2h0OiA3MHZoO1xcbiAgICB3aWR0aDogODAlO1xcbn1cXG4uY2F0ZWdvcnktdGl0bGUge1xcbiAgICBtYXJnaW46IDA7XFxufVxcbi5saXN0LWNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZmxvdzogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICB3aWR0aDogOTAlO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBnYXA6IDJweDtcXG59XFxuLnRhc2staXRlbSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZmxvdzogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gICAgZ2FwOjEwcHg7XFxuICAgIGZsZXgtc2hyaW5rOiAxO1xcbiAgICBib3JkZXI6IDJweCBibGFjayBzb2xpZDtcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXG4gICAgbWluLXdpZHRoOiA3NSU7XFxuICAgIG1heC1oZWlnaHQ6IDE1dmg7XFxuICAgIG1hcmdpbjogLjJyZW07XFxuICAgIHBhZGRpbmc6IDFyZW07XFxufVxcbi5hZGQtaXRlbS1jb250YWluZXJ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xcbiAgICBtYXJnaW46IGF1dG87XFxuICAgIHBhZGRpbmc6IDEuNWVtO1xcbiAgICB3aWR0aDogMzB2dztcXG4gICAgaGVpZ2h0OiAzMHZoO1xcbiAgICBmb250LXNpemU6IDEuNXJlbTtcXG4gICAgYm9yZGVyOiAycHggYmxhY2sgc29saWQ7XFxufVxcbi5uZXdUYXNrQnV0dG9uIHtcXG4gICAgd2lkdGg6IDI1JTtcXG4gICAgbWluLXdpZHRoOiAxMDBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzM3NzdGRjtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgbWFyZ2luOiAuOHJlbTtcXG59XFxuLmNhdGVnb3J5LWxpc3Qge1xcbiAgICB3aWR0aDogODAlO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBnYXA6IDI1cHg7XFxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG5cbmNsYXNzIHRhc2tJdGVtIHtcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5TGV2ZWwpe1xuICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb249IGRlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xuICAgICAgICB0aGlzLnByaW9yaXR5TGV2ZWwgPSBwcmlvcml0eUxldmVsO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IFwiVG8gRG9cIjtcbiAgICAgICAgdGhpcy5ub3RlcztcbiAgICAgICAgdGhpcy5jaGVja2xpc3QgPSBbXTtcbiAgICB9XG59XG5cbmNsYXNzIGNhdGVnb3J5IHtcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZSl7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy50YXNrSXRlbXMgPSBbXTtcbiAgICB9XG4gICAgYWRkSXRlbShpdGVtT2JqKSB7XG4gICAgICAgIHRoaXMudGFza0l0ZW1zLnB1c2goaXRlbU9iailcbiAgICB9XG4gICAgc2V0IGFsbFRhc2tzKHRhc2tMaXN0KSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRhc2tMaXN0KSA9PSB0cnVlKSB7XG4gICAgICAgICAgICB0aGlzLnRhc2tJdGVtcyA9IHRhc2tMaXN0O1xuICAgICAgICB9XG5cbiAgICB9XG5cbn1cblxuZXhwb3J0IHsgdGFza0l0ZW0sIGNhdGVnb3J5IH0iLCJpbXBvcnQgeyBjYXRlZ29yeSB9IGZyb20gXCIuL3RvLWRvJ3NcIjtcblxuXG5mdW5jdGlvbiB0YXNrRGF0YUhhbmRsZXIoKSB7XG4gICAgY29uc3QgdGFza1RpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Rhc2tUaXRsZScpO1xuICAgIGNvbnN0IHRhc2tEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YXNrRGVzY3JpcHRpb24nKTtcbiAgICBjb25zdCB0YXNrRGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YXNrRHVlRGF0ZScpO1xuXG4gICAgcmV0dXJuIHtcInRpdGxlXCI6IHRhc2tUaXRsZS52YWx1ZSwgXCJkZXNjcmlwdGlvblwiOiB0YXNrRGVzY3JpcHRpb24udmFsdWUsIFwiZGF0ZVwiOiB0YXNrRGF0ZS52YWx1ZX1cbn1cblxuZnVuY3Rpb24gY2F0ZWdvcnlEYXRhSGFuZGxlcigpe1xuICAgIGNvbnN0IGNhdGVnb3J5VGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2F0ZWdvcnktdGl0bGUnKTtcblxuICAgIHJldHVybiB7IFwidGl0bGVcIjogY2F0ZWdvcnlUaXRsZS5pbm5lckhUTUwgfVxufVxuZnVuY3Rpb24gbmV3Q2F0ZWdvcnlEYXRhSGFuZGxlcigpe1xuICAgIGNvbnN0IG5ld0NhdGVnb3J5VGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbmV3Q2F0ZWdvcnlUaXRsZScpXG5cbiAgICByZXR1cm4ge1widGl0bGVcIjogbmV3Q2F0ZWdvcnlUaXRsZS52YWx1ZSB9XG59XG5cbmZ1bmN0aW9uIGdldEFsbENhdGVnb3JpZXMoKXtcbiAgICBjb25zdCBjYXRlZ29yaWVzID0ge31cbiAgICBjb25zdCBjYXRlZ29yaWVzRGF0YSA9IEpTT04ucGFyc2Uod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY2F0ZWdvcmllc1wiKSk7XG4gICAgZm9yIChjb25zdCBjYXRPYmplY3QgaW4gY2F0ZWdvcmllc0RhdGEpIHtcbiAgICAgICAgY29uc3QgY2F0ID0gbmV3IGNhdGVnb3J5KGAke2NhdE9iamVjdH1gKTtcbiAgICAgICAgY29uc3QgdGFza0l0ZW1zID0gY2F0ZWdvcmllc0RhdGFbY2F0T2JqZWN0XVtcInRhc2tJdGVtc1wiXTtcbiAgICAgICAgZm9yIChjb25zdCB0YXNrIG9mIHRhc2tJdGVtcykge1xuICAgICAgICAgICAgY2F0LmFkZEl0ZW0odGFzayk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0ZWdvcmllc1tjYXQudGl0bGVdID0gY2F0O1xuICAgIH1cbiAgICAgICAgcmV0dXJuIGNhdGVnb3JpZXNcbn1cblxuZnVuY3Rpb24gc2V0Q2F0ZWdvcnkobmFtZSl7XG4gICAgY29uc3QgYWxsQ2F0ZWdvcmllcyA9IGdldEFsbENhdGVnb3JpZXMoKTtcbiAgICBhbGxDYXRlZ29yaWVzW25hbWVdID0ge1widGl0bGVcIjogbmFtZSwgXCJ0YXNrSXRlbXNcIjpbXX07XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5jYXRlZ29yaWVzID0gSlNPTi5zdHJpbmdpZnkoYWxsQ2F0ZWdvcmllcyk7XG59XG5cbmZ1bmN0aW9uIHNldFRhc2tUb0NhdGVnb3J5KGNhdGVnb3J5TmFtZSwgdGFza09iamVjdCl7XG4gICAgY29uc3QgYWxsQ2F0ZWdvcmllcyA9IGdldEFsbENhdGVnb3JpZXMoKTtcbiAgICBhbGxDYXRlZ29yaWVzW2NhdGVnb3J5TmFtZV1bJ3Rhc2tJdGVtcyddLnB1c2godGFza09iamVjdCk7XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5jYXRlZ29yaWVzID0gSlNPTi5zdHJpbmdpZnkoYWxsQ2F0ZWdvcmllcyk7XG59XG5cbmZ1bmN0aW9uIHNldEN1cnJlbnRDYXRlZ29yeShjYXRlZ29yeU5hbWUpe1xuICAgIGNvbnN0IGFsbENhdGVnb3JpZXMgPSBnZXRBbGxDYXRlZ29yaWVzKCk7XG4gICAgY29uc3Qgc2VsZWN0ZWRDYXRlZ29yeSA9IGFsbENhdGVnb3JpZXNbY2F0ZWdvcnlOYW1lXTtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50Q2F0ZWdvcnlcIiwgSlNPTi5zdHJpbmdpZnkoc2VsZWN0ZWRDYXRlZ29yeSkpO1xufVxuXG5mdW5jdGlvbiBnZXRDdXJyZW50Q2F0ZWdvcnkoKXtcbiAgICBjb25zdCBjdXJyZW50Q2F0ZWdvcnkgPSBKU09OLnBhcnNlKHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImN1cnJlbnRDYXRlZ29yeVwiKSk7XG4gICAgcmV0dXJuIGN1cnJlbnRDYXRlZ29yeVxufVxuXG5cblxuXG5leHBvcnQgeyBnZXRDdXJyZW50Q2F0ZWdvcnksIHRhc2tEYXRhSGFuZGxlciwgY2F0ZWdvcnlEYXRhSGFuZGxlciwgZ2V0QWxsQ2F0ZWdvcmllcywgc2V0Q2F0ZWdvcnksIHNldFRhc2tUb0NhdGVnb3J5LCBuZXdDYXRlZ29yeURhdGFIYW5kbGVyLCBzZXRDdXJyZW50Q2F0ZWdvcnkgIH0iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7IGdlbmVyYXRlTWFpbkxheW91dCwgZGlzcGxheUNhdGVnb3J5LCBkaXNwbGF5Q2F0ZWdvcnlMaXN0IH0gZnJvbSBcIi4vbWFpbi1wYWdlXCI7XG5pbXBvcnQgeyB0YXNrSXRlbSwgY2F0ZWdvcnl9IGZyb20gXCIuL3RvLWRvJ3NcIjtcbmltcG9ydCB7IGdldEFsbENhdGVnb3JpZXMsIHRvRG9EYXRhSGFuZGxlciB9IGZyb20gXCIuL2hhbmRsZXJzXCI7XG5pbXBvcnQgeyBhZGRUYXNrQnV0dG9uTGlzdGVuZXIgLCBhZGRDYXRlZ29yeUJ1dHRvbkxpc3RlbmVyLCBjYW5jZWxCdXR0b25MaXN0ZW5lciwgY2F0ZWdvcnlTZWxlY3RMaXN0ZW5lcnMsIHRhc2tJdGVtc0xpc3RlbmVyc30gZnJvbSBcIi4vYnV0dG9uc1wiXG5cblxuaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSBcImRhdGUtZm5zXCI7XG5pbXBvcnQgJy4vc3R5bGVzLmNzcyc7XG5cbmxldCBjdXJyZW50Q2F0ZWdvcnk7XG5sZXQgY2F0ZWdvcmllcztcbmxldCBjdXJyZW50Q2F0ZWdvcnlEYXRhO1xubGV0IGNhdGVnb3JpZXNEYXRhO1xuXG5jb25zdCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvbnRlbnQnKTtcbmdlbmVyYXRlTWFpbkxheW91dChjb250ZW50KTtcblxuXG5pZiAoIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImNhdGVnb3JpZXNcIikgPT0gbnVsbCkge1xuICAgIGNvbnN0IGRlZmF1bHRJdGVtID0ge3RpdGxlOiBcIkRlZmF1bHRcIiwgdGFza0l0ZW1zOiBbXX07XG4gICAgIGNhdGVnb3JpZXMgPSB7XG4gICAgICAgIFwiRGVmYXVsdFwiOiBkZWZhdWx0SXRlbSxcbiAgICB9XG4gICAgY3VycmVudENhdGVnb3J5ID0gbmV3IGNhdGVnb3J5KGRlZmF1bHRJdGVtLnRpdGxlKTtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjYXRlZ29yaWVzXCIsIEpTT04uc3RyaW5naWZ5KGNhdGVnb3JpZXMpKTtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50Q2F0ZWdvcnlcIiwgSlNPTi5zdHJpbmdpZnkoZGVmYXVsdEl0ZW0pKTtcbn0gZWxzZSB7XG4gICAgY3VycmVudENhdGVnb3J5RGF0YSA9IEpTT04ucGFyc2Uod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVudENhdGVnb3J5XCIpKTtcbiAgICBjYXRlZ29yaWVzRGF0YSA9IEpTT04ucGFyc2Uod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY2F0ZWdvcmllc1wiKSk7XG5cbiAgICBjdXJyZW50Q2F0ZWdvcnkgPSBuZXcgY2F0ZWdvcnkoY3VycmVudENhdGVnb3J5RGF0YS50aXRsZSk7XG4gICAgY3VycmVudENhdGVnb3J5LnRhc2tJdGVtcyA9IGN1cnJlbnRDYXRlZ29yeURhdGEudGFza0l0ZW1zO1xuICAgIGNhdGVnb3JpZXMgPSBnZXRBbGxDYXRlZ29yaWVzKCk7XG59XG5cblxuZGlzcGxheUNhdGVnb3J5TGlzdChjYXRlZ29yaWVzKVxuXG5cbmRpc3BsYXlDYXRlZ29yeShjdXJyZW50Q2F0ZWdvcnkudGl0bGUsIGN1cnJlbnRDYXRlZ29yeS50YXNrSXRlbXMpO1xuXG5cblxuXG5hZGRUYXNrQnV0dG9uTGlzdGVuZXIoY3VycmVudENhdGVnb3J5KTtcbmFkZENhdGVnb3J5QnV0dG9uTGlzdGVuZXIoKTtcbmNhbmNlbEJ1dHRvbkxpc3RlbmVyKCk7XG5jYXRlZ29yeVNlbGVjdExpc3RlbmVycyhjYXRlZ29yaWVzKTtcbnRhc2tJdGVtc0xpc3RlbmVycygpXG5cblxuXG5cblxuLy8gY29uc3QgID0gbmV3IHRhc2tJdGVtKFwiV2FsayB0aGUgZG9nXCIsIFwiVGhlIERvZyBuZWVkcyB0byBnbyBmb3IgYSBtb3JuaW5nIHdhbGsgZXZlcnlkYXlcIiwgZm9ybWF0KG5ldyBEYXRlKDIwMjIsIDEyLCAxNiksIFwieXl5eS9NTS9kZFwiKSwgXCIyXCIpXG5cblxuXG5cbiIsIlxuXG5mdW5jdGlvbiBnZW5lcmF0ZU1haW5MYXlvdXQoY29udGVudEVsZW1lbnQpIHtcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoZWFkZXInKTtcbiAgICBoZWFkZXIuaW5uZXJIVE1MID0gXCJ0YXNrJ3NcIlxuICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCBtYWluVmlldyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IG1haW5QYWdlID0gW2hlYWRlciwgY2F0ZWdvcmllcywgbWFpblZpZXddXG5cbiAgICBjYXRlZ29yaWVzLmNsYXNzTGlzdC5hZGQoJ2NhdGVnb3JpZXMnKTtcbiAgICBtYWluVmlldy5jbGFzc0xpc3QuYWRkKCdpdGVtcycpO1xuXG4gICAgbWFpblBhZ2UuZm9yRWFjaChlID0+IHtcbiAgICAgICAgY29udGVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoZSlcbiAgICAgICAgfVxuICAgIClcbiAgICBkaXNwbGF5QWRkVGFza0J1dHRvbigpO1xuICAgIGRpc3BsYXlBZGRDYXRlZ29yeUJ1dHRvbigpO1xuICAgIFxuICAgIC8vIERpc3BsYXlpbmcgY3VycmVudGx5IHNlbGVjdGVkIGNhdGVnb3J5IGl0ZW1zLyBtYWluIHZpZXdcbiAgICBjb25zdCBjYXRlZ29yeUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IGNhdGVnb3J5VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xuICAgIGNvbnN0IGxpc3RDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICAgIGNhdGVnb3J5Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2NhdGVnb3J5LWNvbnRhaW5lcicpO1xuICAgIGNhdGVnb3J5VGl0bGUuY2xhc3NMaXN0LmFkZCgnY2F0ZWdvcnktdGl0bGUnKTtcbiAgICBsaXN0Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2xpc3QtY29udGFpbmVyJyk7XG5cbiAgICBjYXRlZ29yeUNvbnRhaW5lci5hcHBlbmRDaGlsZChjYXRlZ29yeVRpdGxlKTtcbiAgICBjYXRlZ29yeUNvbnRhaW5lci5hcHBlbmRDaGlsZChsaXN0Q29udGFpbmVyKVxuICAgIG1haW5WaWV3LmFwcGVuZENoaWxkKGNhdGVnb3J5Q29udGFpbmVyKVxuXG4gICAgLy8gRGlzcGxheWluZyB0aGUgbGlzdCBvZiBhbGwgY2F0ZWdvcmllcyBpbiB0aGUgbGVmdCBwYW5lXG4gICAgY29uc3QgY2F0ZWdvcnlMaXN0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgICBjYXRlZ29yeUxpc3RDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnY2F0ZWdvcnktbGlzdCcpO1xuXG4gICAgY2F0ZWdvcmllcy5hcHBlbmRDaGlsZChjYXRlZ29yeUxpc3RDb250YWluZXIpO1xuXG59XG5cblxuXG5mdW5jdGlvbiBkaXNwbGF5VGFzayhsaXN0Q29udGFpbmVyLCB0aXRsZSwgZGF0ZSl7XG4gICAgY29uc3QgdGFza0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgY29uc3QgdGl0bGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgZGF0ZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgIFxuICAgIHRpdGxlRWxlbWVudC5pbm5lckhUTUwgPSB0aXRsZTtcbiAgICBkYXRlRWxlbWVudC5pbm5lckhUTUwgPSBkYXRlO1xuXG4gICAgY29uc3QgYWxsRWxlbWVudHMgPSBbdGl0bGVFbGVtZW50LCBkYXRlRWxlbWVudF07XG4gICAgYWxsRWxlbWVudHMuZm9yRWFjaCggZSA9PiB7XG4gICAgICAgIHRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQoZSlcbiAgICB9KVxuICAgIHRhc2tDb250YWluZXIuY2xhc3NMaXN0LmFkZChcInRhc2staXRlbVwiKTtcbiAgICBsaXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tDb250YWluZXIpO1xuXG59XG5cbmZ1bmN0aW9uIGRpc3BsYXlBZGRUYXNrQnV0dG9uKCkge1xuICAgIGNvbnN0IG1haW5JdGVtc1ZpZXcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaXRlbXMnKTtcbiAgICBjb25zdCBhZGRUYXNrQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG5cbiAgICBcbiAgICBhZGRUYXNrQnV0dG9uLnR5cGUgPSBcImJ1dHRvblwiXG4gICAgYWRkVGFza0J1dHRvbi5jbGFzc0xpc3QuYWRkKCduZXdUYXNrQnV0dG9uJyk7XG4gICAgYWRkVGFza0J1dHRvbi50ZXh0Q29udGVudCA9IFwiTmV3IFRhc2tcIjtcblxuICAgIGFkZFRhc2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkLXRhc2stb3ZlcmxheScpO1xuICAgICAgICBvdmVybGF5LnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICB9KTtcbiAgICBtYWluSXRlbXNWaWV3LmFwcGVuZENoaWxkKGFkZFRhc2tCdXR0b24pO1xuXG59XG5cbmZ1bmN0aW9uIGRpc3BsYXlBZGRDYXRlZ29yeUJ1dHRvbigpIHtcbiAgICBjb25zdCBjYXRlZ29yaWVzVmlldyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXRlZ29yaWVzJyk7XG4gICAgY29uc3QgYWRkQ2F0ZWdvcnlCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcblxuICAgIFxuICAgIGFkZENhdGVnb3J5QnV0dG9uLnR5cGUgPSBcImJ1dHRvblwiXG4gICAgYWRkQ2F0ZWdvcnlCdXR0b24uY2xhc3NMaXN0LmFkZCgnbmV3Q2F0ZWdvcnlCdXR0b24nKTtcbiAgICBhZGRDYXRlZ29yeUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiTmV3IENhdGVnb3J5XCI7XG5cbiAgICBhZGRDYXRlZ29yeUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgY29uc3Qgb3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYXRlZ29yeS1vdmVybGF5Jyk7XG4gICAgICAgIG92ZXJsYXkuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgIH0pO1xuICAgIGNhdGVnb3JpZXNWaWV3LmFwcGVuZENoaWxkKGFkZENhdGVnb3J5QnV0dG9uKTtcblxufVxuZnVuY3Rpb24gZGlzcGxheUNhdGVnb3J5KGNhdGVnb3J5VGl0bGVWYWx1ZSwgYXJyYXlPZkl0ZW1zKSB7XG4gICAgY29uc3QgbGlzdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5saXN0LWNvbnRhaW5lcicpO1xuICAgIGNvbnN0IGNhdGVnb3J5Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhdGVnb3J5LWNvbnRhaW5lcicpO1xuICAgIGNvbnN0IGNhdGVnb3J5VGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2F0ZWdvcnktdGl0bGUnKVxuICAgIHdoaWxlIChsaXN0Q29udGFpbmVyLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgbGlzdENvbnRhaW5lci5yZW1vdmVDaGlsZChsaXN0Q29udGFpbmVyLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIGNhdGVnb3J5VGl0bGUuaW5uZXJIVE1MID0gY2F0ZWdvcnlUaXRsZVZhbHVlO1xuXG4gICAgXG4gICAgYXJyYXlPZkl0ZW1zLmZvckVhY2goIGkgPT4ge1xuICAgICAgICBkaXNwbGF5VGFzayhsaXN0Q29udGFpbmVyLCBpLnRpdGxlLCBpLmRhdGUpXG4gICAgfSlcbiAgICBcbn1cblxuZnVuY3Rpb24gZGlzcGxheUNhdGVnb3J5TGlzdChjYXRlZ29yaWVzKSB7XG4gICAgY29uc3QgY2F0ZWdvcnlMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhdGVnb3J5LWxpc3QnKTtcbiAgICB3aGlsZSAoY2F0ZWdvcnlMaXN0LmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgY2F0ZWdvcnlMaXN0LnJlbW92ZUNoaWxkKGNhdGVnb3J5TGlzdC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBlbnRyeSBpbiBjYXRlZ29yaWVzKXtcbiAgICAgICAgbGV0IGNhdGVnb3J5TmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgIGNhdGVnb3J5TmFtZS5jbGFzc0xpc3QuYWRkKCdjYXRlZ29yeS1uYW1lJyk7XG4gICAgICAgIGNhdGVnb3J5TmFtZS5pbm5lckhUTUwgPSBgJHtlbnRyeX1gO1xuICAgICAgICBjYXRlZ29yeUxpc3QuYXBwZW5kQ2hpbGQoY2F0ZWdvcnlOYW1lKTtcblxuICAgIH1cbn1cblxuXG5cbmV4cG9ydCB7IGdlbmVyYXRlTWFpbkxheW91dCwgZGlzcGxheUNhdGVnb3J5LCBkaXNwbGF5Q2F0ZWdvcnlMaXN0IH0iLCJpbXBvcnQgeyBjYXRlZ29yeURhdGFIYW5kbGVyLCBzZXRUYXNrVG9DYXRlZ29yeSwgdGFza0RhdGFIYW5kbGVyLCBuZXdDYXRlZ29yeURhdGFIYW5kbGVyLCBzZXRDYXRlZ29yeSwgc2V0Q3VycmVudENhdGVnb3J5LCBnZXRDdXJyZW50Q2F0ZWdvcnkgfSBmcm9tIFwiLi9oYW5kbGVyc1wiO1xuaW1wb3J0IHsgdGFza0l0ZW0sIGNhdGVnb3J5IH0gZnJvbSBcIi4vdG8tZG8nc1wiO1xuaW1wb3J0IHsgZGlzcGxheUNhdGVnb3J5LCBkaXNwbGF5Q2F0ZWdvcnlMaXN0IH0gZnJvbSBcIi4vbWFpbi1wYWdlXCI7XG5cblxuXG5mdW5jdGlvbiBhZGRUYXNrQnV0dG9uTGlzdGVuZXIoc2VsZWN0ZWRDYXRlZ29yeSkge1xuICAgIGNvbnN0IGFkZFRhc2tCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLXRhc2stYnV0dG9uJyk7XG4gICAgY29uc3QgYWRkSXRlbUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFzay1mb3JtJyk7XG4gICAgY29uc3QgdGFza092ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFzay1vdmVybGF5Jyk7XG4gICAgY29uc3Qgc2VsZWN0ZWRDYXRlZ29yeVRpdGxlID0gY2F0ZWdvcnlEYXRhSGFuZGxlcigpO1xuICAgIGNvbnN0IG5ld0N1cnJlbnRDYXRlZ29yeSA9IHNlbGVjdGVkQ2F0ZWdvcnk7XG4gICAgXG4gICAgYWRkVGFza0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgY29uc3QgbmV3VGFza0RhdGEgPSB0YXNrRGF0YUhhbmRsZXIoKTtcbiAgICAgICAgXG4gICAgICAgIHNldFRhc2tUb0NhdGVnb3J5KG5ld0N1cnJlbnRDYXRlZ29yeS50aXRsZSwgbmV3VGFza0RhdGEpXG4gICAgICAgIHNldEN1cnJlbnRDYXRlZ29yeShuZXdDdXJyZW50Q2F0ZWdvcnkudGl0bGUpO1xuICAgICAgICAvLyBjb25zdCBjdXJyZW50Q2F0ZWdvcnkgPSBnZXRDdXJyZW50Q2F0ZWdvcnkoKTtcbiAgICAgICAgY29uc3QgdGFzayA9IG5ldyB0YXNrSXRlbShuZXdUYXNrRGF0YS50aXRsZSwgbmV3VGFza0RhdGEuZGVzY3JpcHRpb24sIG5ld1Rhc2tEYXRhLmRhdGUpO1xuICAgICAgICAvLyBjdXJyZW50Q2F0ZWdvcnkudGl0bGVcbiAgICAgICAgLy8gY3VycmVudENhdGVnb3J5LmFkZEl0ZW0odGFzayk7XG4gICAgICAgIGFkZEl0ZW1Gb3JtLnJlc2V0KCk7XG4gICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAvLyBkaXNwbGF5Q2F0ZWdvcnkoY3VycmVudENhdGVnb3J5LnRpdGxlLCBjdXJyZW50Q2F0ZWdvcnkudGFza0l0ZW1zKTtcbiAgICAgICAgdGFza092ZXJsYXkuc3R5bGUuZGlzcGxheSA9IFwiXCI7XG4gICAgfSlcbn1cblxuZnVuY3Rpb24gYWRkQ2F0ZWdvcnlCdXR0b25MaXN0ZW5lcigpIHtcbiAgICBjb25zdCBhZGRDYXRlZ29yeUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtY2F0ZWdvcnktYnV0dG9uJylcbiAgICBjb25zdCBjYXRlZ29yeUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2F0ZWdvcnktZm9ybScpO1xuICAgIGNvbnN0IGNhdGVnb3J5T3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYXRlZ29yeS1vdmVybGF5Jyk7XG5cbiAgICBhZGRDYXRlZ29yeUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgY29uc3QgbmV3Q2F0ZWdvcnkgPSBuZXdDYXRlZ29yeURhdGFIYW5kbGVyKCk7XG4gICAgICAgIC8vIGNvbnN0IGNhdGVnb3J5T2JqID0gbmV3IGNhdGVnb3J5KG5ld0NhdGVnb3J5LnRpdGxlKTtcbiAgICAgICAgc2V0Q2F0ZWdvcnkobmV3Q2F0ZWdvcnkudGl0bGUpO1xuICAgICAgICAvLyBjYXRlZ29yaWVzT2JqZWN0W25ld0NhdGVnb3J5LnRpdGxlXSA9IGNhdGVnb3J5T2JqO1xuICAgICAgICBjYXRlZ29yeUZvcm0ucmVzZXQoKTtcbiAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgIC8vIGRpc3BsYXlDYXRlZ29yeUxpc3QoY2F0ZWdvcmllc09iamVjdCk7XG4gICAgICAgIC8vIGNhdGVnb3J5U2VsZWN0TGlzdGVuZXJzKGNhdGVnb3JpZXNPYmplY3QsIGNhdGVnb3JpZXNPYmplY3RbbmV3Q2F0ZWdvcnkudGl0bGVdKTtcbiAgICAgICAgY2F0ZWdvcnlPdmVybGF5LnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuICAgIH0pXG59XG5cbmZ1bmN0aW9uIGNhbmNlbEJ1dHRvbkxpc3RlbmVyKCl7XG4gICAgY29uc3QgY2FuY2VsQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYW5jZWwtYnV0dG9uJyk7XG4gICAgY29uc3QgZm9ybXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdmb3JtJyk7XG4gICAgY29uc3Qgb3ZlcmxheXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcub3ZlcmxheScpO1xuICAgIGNhbmNlbEJ1dHRvbnMuZm9yRWFjaCggYnV0dG9uID0+IHtcbiAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgZm9ybXMuZm9yRWFjaCggZm9ybSA9PiB7XG4gICAgICAgICAgICAgICAgZm9ybS5yZXNldCgpXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgb3ZlcmxheXMuZm9yRWFjaCggb3ZlcmxheSA9PiB7XG4gICAgICAgICAgICAgICAgb3ZlcmxheS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfSlcbiAgIFxufVxuXG5mdW5jdGlvbiBjYXRlZ29yeVNlbGVjdExpc3RlbmVycyhjYXRlZ29yaWVzKXtcbiAgICBjb25zdCBjYXRlZ29yeUl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNhdGVnb3J5LW5hbWUnKTtcbiAgICBjYXRlZ29yeUl0ZW1zLmZvckVhY2goIChpdGVtKSA9PiB7XG4gICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50Q2F0ZWdvcnkgPSBjYXRlZ29yaWVzW2Ake2l0ZW0uaW5uZXJIVE1MfWBdO1xuICAgICAgICAgICAgc2V0Q3VycmVudENhdGVnb3J5KGN1cnJlbnRDYXRlZ29yeS50aXRsZSk7XG4gICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgICAgIC8vIGRpc3BsYXlDYXRlZ29yeShjdXJyZW50Q2F0ZWdvcnkudGl0bGUsIGN1cnJlbnRDYXRlZ29yeS50YXNrSXRlbXMpO1xuICAgICAgICB9KVxuICAgIH0pXG59XG5cbmZ1bmN0aW9uIHRhc2tJdGVtc0xpc3RlbmVycygpe1xuICAgIGNvbnN0IHRhc2tMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRhc2staXRlbScpO1xuICAgIHRhc2tMaXN0LmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdmlldy10YXNrLW92ZXJsYXknKTtcbiAgICAgICAgICAgIG92ZXJsYXkuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgICAgICB9KVxuICAgIH0pXG59XG5cblxuXG5leHBvcnQgeyBhZGRUYXNrQnV0dG9uTGlzdGVuZXIgLCBhZGRDYXRlZ29yeUJ1dHRvbkxpc3RlbmVyLCBjYW5jZWxCdXR0b25MaXN0ZW5lciwgY2F0ZWdvcnlTZWxlY3RMaXN0ZW5lcnMsIHRhc2tJdGVtc0xpc3RlbmVyc30iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwidGFza0l0ZW0iLCJjb25zdHJ1Y3RvciIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHlMZXZlbCIsInN0YXR1cyIsIm5vdGVzIiwiY2hlY2tsaXN0IiwiY2F0ZWdvcnkiLCJ0YXNrSXRlbXMiLCJhZGRJdGVtIiwiaXRlbU9iaiIsImFsbFRhc2tzIiwidGFza0xpc3QiLCJBcnJheSIsImlzQXJyYXkiLCJnZXRBbGxDYXRlZ29yaWVzIiwiY2F0ZWdvcmllcyIsImNhdGVnb3JpZXNEYXRhIiwicGFyc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiY2F0T2JqZWN0IiwiY2F0IiwidGFzayIsInNldEN1cnJlbnRDYXRlZ29yeSIsImNhdGVnb3J5TmFtZSIsInNlbGVjdGVkQ2F0ZWdvcnkiLCJzZXRJdGVtIiwiY3VycmVudENhdGVnb3J5IiwiY3VycmVudENhdGVnb3J5RGF0YSIsImNvbnRlbnRFbGVtZW50IiwiaGVhZGVyIiwiaW5uZXJIVE1MIiwibWFpblZpZXciLCJtYWluUGFnZSIsImNsYXNzTGlzdCIsImFkZCIsImZvckVhY2giLCJtYWluSXRlbXNWaWV3IiwiYWRkVGFza0J1dHRvbiIsInR5cGUiLCJ0ZXh0Q29udGVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkaXNwbGF5IiwiZGlzcGxheUFkZFRhc2tCdXR0b24iLCJjYXRlZ29yaWVzVmlldyIsImFkZENhdGVnb3J5QnV0dG9uIiwiZGlzcGxheUFkZENhdGVnb3J5QnV0dG9uIiwiY2F0ZWdvcnlDb250YWluZXIiLCJjYXRlZ29yeVRpdGxlIiwibGlzdENvbnRhaW5lciIsImNhdGVnb3J5TGlzdENvbnRhaW5lciIsImdlbmVyYXRlTWFpbkxheW91dCIsImRlZmF1bHRJdGVtIiwiY2F0ZWdvcnlMaXN0IiwiZW50cnkiLCJkaXNwbGF5Q2F0ZWdvcnlMaXN0IiwiY2F0ZWdvcnlUaXRsZVZhbHVlIiwiYXJyYXlPZkl0ZW1zIiwiZGF0ZSIsInRhc2tDb250YWluZXIiLCJ0aXRsZUVsZW1lbnQiLCJkYXRlRWxlbWVudCIsImRpc3BsYXlUYXNrIiwiZGlzcGxheUNhdGVnb3J5IiwiYWRkSXRlbUZvcm0iLCJ0YXNrT3ZlcmxheSIsIm5ld0N1cnJlbnRDYXRlZ29yeSIsIm5ld1Rhc2tEYXRhIiwidGFza1RpdGxlIiwidGFza0Rlc2NyaXB0aW9uIiwidGFza0RhdGUiLCJ2YWx1ZSIsInRhc2tEYXRhSGFuZGxlciIsInRhc2tPYmplY3QiLCJhbGxDYXRlZ29yaWVzIiwic2V0VGFza1RvQ2F0ZWdvcnkiLCJyZXNldCIsImxvY2F0aW9uIiwicmVsb2FkIiwiYWRkVGFza0J1dHRvbkxpc3RlbmVyIiwiY2F0ZWdvcnlGb3JtIiwiY2F0ZWdvcnlPdmVybGF5IiwibmFtZSIsInNldENhdGVnb3J5IiwiYWRkQ2F0ZWdvcnlCdXR0b25MaXN0ZW5lciIsImNhbmNlbEJ1dHRvbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybXMiLCJvdmVybGF5cyIsImJ1dHRvbiIsImZvcm0iLCJvdmVybGF5IiwiY2FuY2VsQnV0dG9uTGlzdGVuZXIiLCJjYXRlZ29yeVNlbGVjdExpc3RlbmVycyJdLCJzb3VyY2VSb290IjoiIn0=