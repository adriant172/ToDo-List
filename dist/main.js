(()=>{"use strict";var e={28:(e,n,t)=>{t.d(n,{Z:()=>u});var o=t(537),r=t.n(o),i=t(645),a=t.n(i),c=t(667),s=t.n(c),l=new URL(t(428),t.b),A=a()(r()),d=s()(l);A.push([e.id,"@font-face {\n    font-family: 'Oswald';\n    src: url("+d+") format(truetype);\n}\n\nbody {\n    margin: 0;\n    font-family: 'Oswald';\n}\n.overlay {\n    position: fixed;\n    display: none;\n    background-color: rgba(104,104,104,0.8);\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n#content {\n    display: grid;\n    grid-template-columns: 2fr 5fr;\n    grid-template-rows: .75fr 9fr;\n    min-height: 100vh;\n}\nheader {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    font-weight: 400;\n    \n    font-size: 36px;\n    background-color: #3777FF;\n}\n.categories {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    background-color: #e7e5e4;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n}\n.items {\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: #fcfcfc;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.category-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 15px;\n    height: 70vh;\n    width: 80%;\n}\n.category-title {\n    margin: 0;\n}\n.list-container {\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    width: 90%;\n    padding: 0;\n    gap: 2px;\n}\n.task-item {\n    display: flex;\n    flex-flow: column;\n    align-items: flex-start;\n    gap:10px;\n    flex-shrink: 1;\n    border: 2px black solid;\n    border-radius: 15px;\n    min-width: 75%;\n    max-height: 15vh;\n    margin: .2rem;\n    padding: 1rem;\n}\n.item-container{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 30vw;\n    height: 30vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\n.newTaskButton {\n    width: 25%;\n    min-width: 100px;\n    background-color: #3777FF;\n    border-radius: 10px;\n    margin: .8rem;\n}\n.taskDescription {\n    resize: none;\n    height: 80%;\n    width: 90%;\n}\n.category-list {\n    width: 80%;\n    padding: 0;\n    gap: 25px;\n    list-style-type: none;\n}\n.view-task-container{\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 60vw;\n    height: 70vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\nbutton {\n    border-radius: 10px;\n}\n#edit-task-header {\n    grid-row: 1 / 2;\n    grid-column: 1 / 5;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    margin-bottom: 10px;\n    border-bottom: solid 2px grey;\n\n}\n#edit-task-main-content {\n    grid-row: 2 / 11;\n    grid-column: 1 / 4;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n#edit-task-sidebar {\n    grid-row: 2 / 11;\n    grid-column: 4 / 5;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.edit-task-button {\n    background-color: #3777FF;\n}\n.delete-task-button {\n    grid-column: 4 / 5;\n    background-color: tomato;\n}\n.form-entry {\n    max-width: 70%;\n    border: none;\n    border-radius: 10px;\n    padding: 10px;\n}\nlabel {\n    font-size: 16px;\n    font-weight: bold;\n    font-style: italic;\n}\ntextarea {\n    resize: none;\n}\n.taskTitle {\n    min-height: 10%;\n}\n.taskDescription, .taskNotes {\n    min-height: 100px;\n    max-height: 35%;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,6DAAiE;AACrE;;AAEA;IACI,SAAS;IACT,qBAAqB;AACzB;AACA;IACI,eAAe;IACf,aAAa;IACb,uCAAuC;IACvC,UAAU;IACV,OAAO;IACP,MAAM;IACN,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,6BAA6B;IAC7B,iBAAiB;AACrB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,gBAAgB;;IAEhB,eAAe;IACf,yBAAyB;AAC7B;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;IACZ,UAAU;AACd;AACA;IACI,SAAS;AACb;AACA;IACI,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,UAAU;IACV,UAAU;IACV,QAAQ;AACZ;AACA;IACI,aAAa;IACb,iBAAiB;IACjB,uBAAuB;IACvB,QAAQ;IACR,cAAc;IACd,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,aAAa;AACjB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,4BAA4B;IAC5B,YAAY;IACZ,cAAc;IACd,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,uBAAuB;AAC3B;AACA;IACI,UAAU;IACV,gBAAgB;IAChB,yBAAyB;IACzB,mBAAmB;IACnB,aAAa;AACjB;AACA;IACI,YAAY;IACZ,WAAW;IACX,UAAU;AACd;AACA;IACI,UAAU;IACV,UAAU;IACV,SAAS;IACT,qBAAqB;AACzB;AACA;IACI,aAAa;IACb,qCAAqC;IACrC,mCAAmC;IACnC,4BAA4B;IAC5B,YAAY;IACZ,cAAc;IACd,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,uBAAuB;AAC3B;AACA;IACI,mBAAmB;AACvB;AACA;IACI,eAAe;IACf,kBAAkB;IAClB,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;;AAEjC;AACA;IACI,gBAAgB;IAChB,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,gBAAgB;IAChB,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,kBAAkB;IAClB,wBAAwB;AAC5B;AACA;IACI,cAAc;IACd,YAAY;IACZ,mBAAmB;IACnB,aAAa;AACjB;AACA;IACI,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;AACA;IACI,YAAY;AAChB;AACA;IACI,eAAe;AACnB;AACA;IACI,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:["@font-face {\n    font-family: 'Oswald';\n    src: url('./fonts/Oswald-VariableFont_wght.ttf') format(truetype);\n}\n\nbody {\n    margin: 0;\n    font-family: 'Oswald';\n}\n.overlay {\n    position: fixed;\n    display: none;\n    background-color: rgba(104,104,104,0.8);\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n#content {\n    display: grid;\n    grid-template-columns: 2fr 5fr;\n    grid-template-rows: .75fr 9fr;\n    min-height: 100vh;\n}\nheader {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    font-weight: 400;\n    \n    font-size: 36px;\n    background-color: #3777FF;\n}\n.categories {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    background-color: #e7e5e4;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n}\n.items {\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: #fcfcfc;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.category-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 15px;\n    height: 70vh;\n    width: 80%;\n}\n.category-title {\n    margin: 0;\n}\n.list-container {\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    width: 90%;\n    padding: 0;\n    gap: 2px;\n}\n.task-item {\n    display: flex;\n    flex-flow: column;\n    align-items: flex-start;\n    gap:10px;\n    flex-shrink: 1;\n    border: 2px black solid;\n    border-radius: 15px;\n    min-width: 75%;\n    max-height: 15vh;\n    margin: .2rem;\n    padding: 1rem;\n}\n.item-container{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 30vw;\n    height: 30vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\n.newTaskButton {\n    width: 25%;\n    min-width: 100px;\n    background-color: #3777FF;\n    border-radius: 10px;\n    margin: .8rem;\n}\n.taskDescription {\n    resize: none;\n    height: 80%;\n    width: 90%;\n}\n.category-list {\n    width: 80%;\n    padding: 0;\n    gap: 25px;\n    list-style-type: none;\n}\n.view-task-container{\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 60vw;\n    height: 70vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\nbutton {\n    border-radius: 10px;\n}\n#edit-task-header {\n    grid-row: 1 / 2;\n    grid-column: 1 / 5;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    margin-bottom: 10px;\n    border-bottom: solid 2px grey;\n\n}\n#edit-task-main-content {\n    grid-row: 2 / 11;\n    grid-column: 1 / 4;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n#edit-task-sidebar {\n    grid-row: 2 / 11;\n    grid-column: 4 / 5;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.edit-task-button {\n    background-color: #3777FF;\n}\n.delete-task-button {\n    grid-column: 4 / 5;\n    background-color: tomato;\n}\n.form-entry {\n    max-width: 70%;\n    border: none;\n    border-radius: 10px;\n    padding: 10px;\n}\nlabel {\n    font-size: 16px;\n    font-weight: bold;\n    font-style: italic;\n}\ntextarea {\n    resize: none;\n}\n.taskTitle {\n    min-height: 10%;\n}\n.taskDescription, .taskNotes {\n    min-height: 100px;\n    max-height: 35%;\n}"],sourceRoot:""}]);const u=A},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var A=[].concat(e[l]);o&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),n.push(A))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],c=0;c<e.length;c++){var s=e[c],l=o.base?s[0]+o.base:s[0],A=i[l]||0,d="".concat(l," ").concat(A);i[l]=A+1;var u=t(d),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var p=r(m,o);o.byIndex=c,n.splice(c,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var s=o(e,r),l=0;l<i.length;l++){var A=t(i[l]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}i=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},428:(e,n,t)=>{e.exports=t.p+"46d7853f0185f6bf0c93.ttf"}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{class e{constructor(e,n,t,o){this.title=e,this.description=n,this.dueDate=t,this.priority=o,this.status="To Do",this.notes="",this.checklist=[]}}class n{constructor(e){this.title=e,this.taskItems=[]}addItem(e){this.taskItems.push(e)}set allTasks(e){1==Array.isArray(e)&&(this.taskItems=e)}}function o(){const e={},t=JSON.parse(window.localStorage.getItem("categories"));for(const o in t){const r=new n(`${o}`),i=t[o].taskItems;for(const e of i)r.addItem(e);e[r.title]=r}return e}function r(e){const n=o()[e];window.localStorage.setItem("currentCategory",JSON.stringify(n))}function i(){const e=document.querySelector("#edit-taskTitle").value,n=document.querySelector("#edit-taskDescription").value,t=document.querySelector("#edit-taskNotes").value,o=document.querySelector("#taskStatus").value,r=document.querySelector("#priority").value,i=document.querySelector("#dueDate").value;return console.log({title:e,description:n,notes:t,status:o,priority:r,dueDate:i}),{title:e,description:n,notes:t,status:o,priority:r,dueDate:i}}var a=t(379),c=t.n(a),s=t(795),l=t.n(s),A=t(569),d=t.n(A),u=t(565),m=t.n(u),p=t(216),f=t.n(p),g=t(589),C=t.n(g),y=t(28),B={};let h,I,v,b;B.styleTagTransform=C(),B.setAttributes=m(),B.insert=d().bind(null,"head"),B.domAPI=l(),B.insertStyleElement=f(),c()(y.Z,B),y.Z&&y.Z.locals&&y.Z.locals;const k=document.querySelector("#content"),w=document.querySelector("#category-form");if(function(e){const n=document.createElement("header");n.innerHTML="To Do's";const t=document.createElement("div"),o=document.createElement("div"),r=[n,t,o];t.classList.add("categories"),o.classList.add("items"),r.forEach((n=>{e.appendChild(n)})),function(){const e=document.querySelector(".items"),n=document.createElement("button");n.type="button",n.classList.add("newTaskButton"),n.textContent="New Task",n.addEventListener("click",(()=>{document.querySelector("#add-task-overlay").style.display="flex"})),e.appendChild(n)}(),function(){const e=document.querySelector(".categories"),n=document.createElement("button");n.type="button",n.classList.add("newCategoryButton"),n.textContent="New Category",n.addEventListener("click",(()=>{document.querySelector("#category-overlay").style.display="flex"})),e.appendChild(n)}();const i=document.createElement("div"),a=document.createElement("h3"),c=document.createElement("ul");i.classList.add("category-container"),a.classList.add("category-title"),c.classList.add("list-container"),i.appendChild(a),i.appendChild(c),o.appendChild(i);const s=document.createElement("ul");s.classList.add("category-list"),t.appendChild(s)}(k),null==window.localStorage.getItem("categories")){const e={title:"Default",taskItems:[]};I={Default:e},h=new n(e.title),window.localStorage.setItem("categories",JSON.stringify(I)),window.localStorage.setItem("currentCategory",JSON.stringify(e))}else v=JSON.parse(window.localStorage.getItem("currentCategory")),b=JSON.parse(window.localStorage.getItem("categories")),h=new n(v.title),h.taskItems=v.taskItems,I=o();!function(e){const n=document.querySelector(".category-list");for(;n.firstChild;)n.removeChild(n.firstChild);for(const t in e){let e=document.createElement("li");e.classList.add("category-name"),e.innerHTML=`${t}`,n.appendChild(e)}}(I),function(e,n){const t=document.querySelector(".list-container"),o=(document.querySelector(".category-container"),document.querySelector(".category-title"));for(;t.firstChild;)t.removeChild(t.firstChild);o.innerHTML=e,n.forEach((e=>{!function(e,n,t){const o=document.createElement("li"),r=document.createElement("div"),i=document.createElement("div");r.innerHTML=n,i.innerHTML=t,[r,i].forEach((e=>{o.appendChild(e)})),o.classList.add("task-item"),e.appendChild(o)}(t,e.title,e.dueDate)}))}(h.title,h.taskItems),w.onsubmit=()=>{!function(){document.querySelector(".add-category-button");const e=document.querySelector("#category-form"),n=document.querySelector("#category-overlay");!function(e){const n=o();n[e]={title:e,taskItems:[]},window.localStorage.categories=JSON.stringify(n)}(document.querySelector("#newCategoryTitle").value),e.reset(),location.reload(),n.style.display=""}()},function(n){const t=document.querySelector(".add-task-button"),i=document.querySelector("#task-form"),a=document.querySelector("#task-overlay"),c=n;t.addEventListener("click",(()=>{const n=function(){const e=document.querySelector("#newTaskTitle"),n=document.querySelector("#newTaskDescription"),t=document.querySelector("#taskDueDate");return{title:e.value,description:n.value,date:t.value}}(),t=new e(n.title,n.description,n.date);!function(e,n){const t=o();t[e].taskItems.push(n),window.localStorage.categories=JSON.stringify(t)}(c.title,t),r(c.title),i.reset(),location.reload(),a.style.display=""}))}(h),function(){const e=document.querySelectorAll(".cancel-button"),n=document.querySelectorAll("form"),t=document.querySelectorAll(".overlay");e.forEach((e=>{e.addEventListener("click",(()=>{n.forEach((e=>{e.reset()})),t.forEach((e=>{e.style.display=""}))}))}))}(),function(e){document.querySelectorAll(".category-name").forEach((n=>{n.addEventListener("click",(()=>{r(e[`${n.innerHTML}`].title),location.reload()}))}))}(I),function(){const e=document.querySelectorAll(".task-item");let n=document.querySelector(".category-title");e.forEach((e=>{e.addEventListener("click",(()=>{const t=document.querySelector("#view-task-overlay"),r=document.querySelector("#category-title"),i=document.querySelector("#edit-taskTitle"),a=document.querySelector("#edit-taskDescription"),c=document.querySelector("#edit-taskNotes"),s=document.querySelector("#taskStatus"),l=document.querySelector("#priority"),A=document.querySelector("#dueDate");t.style.display="flex";const d=e.firstChild.innerHTML,u=function(e,n){const t=o()[e].taskItems;for(const e of t)if(e.title==n)return e}(n.innerHTML,d);r.innerHTML=n.innerHTML,i.value=u.title,a.value=u.description,c.value=u.notes,s.value=u.status,null==u.priority?l.value="P4":l.value=u.priority;const m=u.dueDate;console.log(String(m)),A.value=String(m)}))}))}(),function(e){const n=document.querySelector(".edit-task-button"),t=document.querySelector("#edit-task-form"),a=document.querySelector("#view-task-overlay");n.addEventListener("click",(()=>{const n=i();!function(e,n){const t=o(),r=t[e].taskItems;r.forEach(((e,t)=>{e.title==n.title&&(r[t]=n)})),t[e].taskItems=r,window.localStorage.categories=JSON.stringify(t)}(e.title,n),r(e.title),t.reset(),location.reload(),a.style.display=""}))}(h),function(e){const n=document.querySelector(".delete-task-button"),t=document.querySelector("#edit-task-form"),a=document.querySelector("#view-task-overlay");n.addEventListener("click",(()=>{const n=i();!function(e,n){const t=o(),r=t[e].taskItems;r.forEach(((e,t)=>{e.title==n.title&&r.splice(t,1)})),t[e].taskItems=r,window.localStorage.categories=JSON.stringify(t)}(e.title,n),r(e.title),t.reset(),location.reload(),a.style.display=""}))}(h)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,