(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"\nbody {\n    margin: 0;\n}\n.overlay {\n    position: fixed;\n    display: none;\n    background-color: rgba(104,104,104,0.8);\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n#content {\n    display: grid;\n    grid-template-columns: 2fr 5fr;\n    grid-template-rows: .75fr 9fr;\n    min-height: 100vh;\n}\nheader {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    background-color: #3777FF;\n}\n.categories {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    background-color: #e7e5e4;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n}\n.items {\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: #fcfcfc;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.category-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 15px;\n    height: 70vh;\n    width: 80%;\n}\n.category-title {\n    margin: 0;\n}\n.list-container {\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    width: 90%;\n    padding: 0;\n    gap: 2px;\n}\n.task-item {\n    display: flex;\n    flex-flow: column;\n    align-items: flex-start;\n    gap:10px;\n    flex-shrink: 1;\n    border: 2px black solid;\n    border-radius: 15px;\n    min-width: 75%;\n    max-height: 15vh;\n    margin: .2rem;\n    padding: 1rem;\n}\n.item-container{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 30vw;\n    height: 30vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\n.newTaskButton {\n    width: 25%;\n    min-width: 100px;\n    background-color: #3777FF;\n    border-radius: 10px;\n    margin: .8rem;\n}\n.taskDescription {\n    resize: none;\n    height: 80%;\n    width: 90%;\n}\n.category-list {\n    width: 80%;\n    padding: 0;\n    gap: 25px;\n    list-style-type: none;\n}\n.view-task-container{\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 60vw;\n    height: 70vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\n#edit-task-header {\n    grid-row: 1 / 2;\n    grid-column: 1 / 5;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    margin-bottom: 10px;\n    border-bottom: solid 2px grey;\n\n}\n#edit-task-main-content {\n    grid-row: 2 / 11;\n    grid-column: 1 / 4;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n#edit-task-sidebar {\n    grid-row: 2 / 11;\n    grid-column: 4 / 5;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.form-entry {\n    max-width: 70%;\n    border: none;\n    border-radius: 10px;\n}\nlabel {\n    font-size: 16px;\n    font-weight: bold;\n    font-style: italic;\n}\ntextarea {\n    resize: none;\n}\n.taskTitle {\n    min-height: 10%;\n}\n.taskDescription, .taskNotes {\n    min-height: 100px;\n    max-height: 35%;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:";AACA;IACI,SAAS;AACb;AACA;IACI,eAAe;IACf,aAAa;IACb,uCAAuC;IACvC,UAAU;IACV,OAAO;IACP,MAAM;IACN,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,6BAA6B;IAC7B,iBAAiB;AACrB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,yBAAyB;AAC7B;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;IACZ,UAAU;AACd;AACA;IACI,SAAS;AACb;AACA;IACI,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,UAAU;IACV,UAAU;IACV,QAAQ;AACZ;AACA;IACI,aAAa;IACb,iBAAiB;IACjB,uBAAuB;IACvB,QAAQ;IACR,cAAc;IACd,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,aAAa;AACjB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,4BAA4B;IAC5B,YAAY;IACZ,cAAc;IACd,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,uBAAuB;AAC3B;AACA;IACI,UAAU;IACV,gBAAgB;IAChB,yBAAyB;IACzB,mBAAmB;IACnB,aAAa;AACjB;AACA;IACI,YAAY;IACZ,WAAW;IACX,UAAU;AACd;AACA;IACI,UAAU;IACV,UAAU;IACV,SAAS;IACT,qBAAqB;AACzB;AACA;IACI,aAAa;IACb,qCAAqC;IACrC,mCAAmC;IACnC,4BAA4B;IAC5B,YAAY;IACZ,cAAc;IACd,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,uBAAuB;AAC3B;AACA;IACI,eAAe;IACf,kBAAkB;IAClB,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;;AAEjC;AACA;IACI,gBAAgB;IAChB,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,gBAAgB;IAChB,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,cAAc;IACd,YAAY;IACZ,mBAAmB;AACvB;AACA;IACI,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;AACA;IACI,YAAY;AAChB;AACA;IACI,eAAe;AACnB;AACA;IACI,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:["\nbody {\n    margin: 0;\n}\n.overlay {\n    position: fixed;\n    display: none;\n    background-color: rgba(104,104,104,0.8);\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n#content {\n    display: grid;\n    grid-template-columns: 2fr 5fr;\n    grid-template-rows: .75fr 9fr;\n    min-height: 100vh;\n}\nheader {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    background-color: #3777FF;\n}\n.categories {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    background-color: #e7e5e4;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n}\n.items {\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: #fcfcfc;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.category-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 15px;\n    height: 70vh;\n    width: 80%;\n}\n.category-title {\n    margin: 0;\n}\n.list-container {\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    width: 90%;\n    padding: 0;\n    gap: 2px;\n}\n.task-item {\n    display: flex;\n    flex-flow: column;\n    align-items: flex-start;\n    gap:10px;\n    flex-shrink: 1;\n    border: 2px black solid;\n    border-radius: 15px;\n    min-width: 75%;\n    max-height: 15vh;\n    margin: .2rem;\n    padding: 1rem;\n}\n.item-container{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 30vw;\n    height: 30vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\n.newTaskButton {\n    width: 25%;\n    min-width: 100px;\n    background-color: #3777FF;\n    border-radius: 10px;\n    margin: .8rem;\n}\n.taskDescription {\n    resize: none;\n    height: 80%;\n    width: 90%;\n}\n.category-list {\n    width: 80%;\n    padding: 0;\n    gap: 25px;\n    list-style-type: none;\n}\n.view-task-container{\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 60vw;\n    height: 70vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\n#edit-task-header {\n    grid-row: 1 / 2;\n    grid-column: 1 / 5;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    margin-bottom: 10px;\n    border-bottom: solid 2px grey;\n\n}\n#edit-task-main-content {\n    grid-row: 2 / 11;\n    grid-column: 1 / 4;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n#edit-task-sidebar {\n    grid-row: 2 / 11;\n    grid-column: 4 / 5;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.form-entry {\n    max-width: 70%;\n    border: none;\n    border-radius: 10px;\n}\nlabel {\n    font-size: 16px;\n    font-weight: bold;\n    font-style: italic;\n}\ntextarea {\n    resize: none;\n}\n.taskTitle {\n    min-height: 10%;\n}\n.taskDescription, .taskNotes {\n    min-height: 100px;\n    max-height: 35%;\n}"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(a[A]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],c=0;c<n.length;c++){var A=n[c],s=r.base?A[0]+r.base:A[0],l=i[s]||0,d="".concat(s," ").concat(l);i[s]=l+1;var u=t(d),m={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var p=o(m,r);r.byIndex=c,e.splice(c,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var A=r(n,o),s=0;s<i.length;s++){var l=t(i[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{class n{constructor(n,e,t,r){this.title=n,this.description=e,this.dueDate=t,this.priorityLevel=r,this.status="To Do",this.notes,this.checklist=[]}}class e{constructor(n){this.title=n,this.taskItems=[]}addItem(n){this.taskItems.push(n)}set allTasks(n){1==Array.isArray(n)&&(this.taskItems=n)}}function r(){const n={},t=JSON.parse(window.localStorage.getItem("categories"));for(const r in t){const o=new e(`${r}`),i=t[r].taskItems;for(const n of i)o.addItem(n);n[o.title]=o}return n}function o(n){const e=r()[n];window.localStorage.setItem("currentCategory",JSON.stringify(e))}var i=t(379),a=t.n(i),c=t(795),A=t.n(c),s=t(569),l=t.n(s),d=t(565),u=t.n(d),m=t(216),p=t.n(m),g=t(589),f=t.n(g),C=t(28),B={};let h,I,y,v;if(B.styleTagTransform=f(),B.setAttributes=u(),B.insert=l().bind(null,"head"),B.domAPI=A(),B.insertStyleElement=p(),a()(C.Z,B),C.Z&&C.Z.locals&&C.Z.locals,function(n){const e=document.createElement("header");e.innerHTML="task's";const t=document.createElement("div"),r=document.createElement("div"),o=[e,t,r];t.classList.add("categories"),r.classList.add("items"),o.forEach((e=>{n.appendChild(e)})),function(){const n=document.querySelector(".items"),e=document.createElement("button");e.type="button",e.classList.add("newTaskButton"),e.textContent="New Task",e.addEventListener("click",(()=>{document.querySelector("#add-task-overlay").style.display="flex"})),n.appendChild(e)}(),function(){const n=document.querySelector(".categories"),e=document.createElement("button");e.type="button",e.classList.add("newCategoryButton"),e.textContent="New Category",e.addEventListener("click",(()=>{document.querySelector("#category-overlay").style.display="flex"})),n.appendChild(e)}();const i=document.createElement("div"),a=document.createElement("h3"),c=document.createElement("ul");i.classList.add("category-container"),a.classList.add("category-title"),c.classList.add("list-container"),i.appendChild(a),i.appendChild(c),r.appendChild(i);const A=document.createElement("ul");A.classList.add("category-list"),t.appendChild(A)}(document.querySelector("#content")),null==window.localStorage.getItem("categories")){const n={title:"Default",taskItems:[]};I={Default:n},h=new e(n.title),window.localStorage.setItem("categories",JSON.stringify(I)),window.localStorage.setItem("currentCategory",JSON.stringify(n))}else y=JSON.parse(window.localStorage.getItem("currentCategory")),v=JSON.parse(window.localStorage.getItem("categories")),h=new e(y.title),h.taskItems=y.taskItems,I=r();!function(n){const e=document.querySelector(".category-list");for(;e.firstChild;)e.removeChild(e.firstChild);for(const t in n){let n=document.createElement("li");n.classList.add("category-name"),n.innerHTML=`${t}`,e.appendChild(n)}}(I),function(n,e){const t=document.querySelector(".list-container"),r=(document.querySelector(".category-container"),document.querySelector(".category-title"));for(;t.firstChild;)t.removeChild(t.firstChild);r.innerHTML=n,e.forEach((n=>{!function(n,e,t){const r=document.createElement("li"),o=document.createElement("div"),i=document.createElement("div");o.innerHTML=e,i.innerHTML=t,[o,i].forEach((n=>{r.appendChild(n)})),r.classList.add("task-item"),n.appendChild(r)}(t,n.title,n.date)}))}(h.title,h.taskItems),function(e){const t=document.querySelector(".add-task-button"),i=document.querySelector("#task-form"),a=document.querySelector("#task-overlay"),c=(document.querySelector(".category-title").innerHTML,e);t.addEventListener("click",(()=>{const e=function(){const n=document.querySelector("#newTaskTitle"),e=document.querySelector("#newTaskDescription"),t=document.querySelector("#taskDueDate");return{title:n.value,description:e.value,date:t.value}}();!function(n,e){const t=r();t[n].taskItems.push(e),window.localStorage.categories=JSON.stringify(t)}(c.title,e),o(c.title),new n(e.title,e.description,e.date),i.reset(),location.reload(),a.style.display=""}))}(h),function(){const n=document.querySelector(".add-category-button"),e=document.querySelector("#category-form"),t=document.querySelector("#category-overlay");n.addEventListener("click",(()=>{!function(n){const e=r();e[n]={title:n,taskItems:[]},window.localStorage.categories=JSON.stringify(e)}(document.querySelector("#newCategoryTitle").value),e.reset(),location.reload(),t.style.display=""}))}(),function(){const n=document.querySelectorAll(".cancel-button"),e=document.querySelectorAll("form"),t=document.querySelectorAll(".overlay");n.forEach((n=>{n.addEventListener("click",(()=>{e.forEach((n=>{n.reset()})),t.forEach((n=>{n.style.display=""}))}))}))}(),function(n){document.querySelectorAll(".category-name").forEach((e=>{e.addEventListener("click",(()=>{o(n[`${e.innerHTML}`].title),location.reload()}))}))}(I),document.querySelectorAll(".task-item").forEach((n=>{n.addEventListener("click",(()=>{document.querySelector("#view-task-overlay").style.display="flex"}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,