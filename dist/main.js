(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>u});var o=t(537),r=t.n(o),i=t(645),a=t.n(i),A=t(667),c=t.n(A),s=new URL(t(428),t.b),l=a()(r()),d=c()(s);l.push([n.id,"@font-face {\n    font-family: 'Oswald';\n    src: url("+d+") format(truetype);\n}\n@keyframes selecting {\n    to {\n        transform: scale(1.2, 1.2);\n    }\n}\nbody {\n    margin: 0;\n    font-family: 'Oswald';\n}\nli {\n    cursor: pointer;\n}\n.overlay {\n    position: fixed;\n    display: none;\n    background-color: rgba(104,104,104,0.8);\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n#content {\n    display: grid;\n    grid-template-columns: 2fr 5fr;\n    grid-template-rows: .75fr 9fr;\n    min-height: 100vh;\n}\nheader {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    font-weight: 400;\n    font-size: 36px;\n    background-color: #3777FF;\n}\n.categories {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    background-color: #e7e5e4;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n}\n.category-name {\n    padding: 2px;\n    padding-left: 10px;\n    width: 80%;\n}\n.items {\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: #fcfcfc;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.category-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 15px;\n    height: 70vh;\n    width: 80%;\n}\n.category-title {\n    margin: 0;\n}\n.list-container {\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    width: 90%;\n    padding: 0;\n    \n}\n.task-item {\n    display: flex;\n    flex-flow: column;\n    align-items: flex-start;\n    gap:10px;\n    flex-shrink: 1;\n    min-width: 75%;\n    max-height: 15vh;\n    border:2px grey solid;\n    border-radius: 3px;\n    border-top: 1px grey solid;\n    border-bottom: 1px grey solid;\n    margin-bottom: 0;\n    padding: 1rem;\n}\n.list-container > li:first-child {\n    border-top: 2px grey solid;\n}\n.list-container > li:nth-last-child(2) {\n    border-bottom: 2px grey solid;\n}\n.item-container{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 40vw;\n    height: 40vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\n.newTaskButton {\n    width: 25%;\n    min-width: 100px;\n    margin: 10px;\n}\n.newTaskButton:hover{\n    animation: selecting .5s infinite alternate;\n    /* transform: scale(1.5); */\n}\n.newCategoryButton {\n    margin: .8rem;\n}\n.taskDescription {\n    resize: none;\n    height: 80%;\n    width: 90%;\n}\n.category-list {\n    width: 80%;\n    padding: 0;\n    gap: 25px;\n    list-style-type: none;\n}\n.view-task-container{\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 60vw;\n    height: 70vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\nbutton {\n    border-radius: 10px;\n    cursor: pointer;\n}\n.edit-task-button, .delete-task-button {\n    margin-top: 10px;\n}\n.icons {\n    width: 30px;\n    height: 30px;\n}\n.cancel-button, .edit-task-button, .delete-task-button, .newTaskButton, .newCategoryButton{\n    border: none;\n    background:inherit;\n}\n.add-task-button {\n    background-color: #3777FF;\n}\n#edit-task-header {\n    grid-row: 1 / 2;\n    grid-column: 1 / 5;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    margin-bottom: 10px;\n    border-bottom: solid 2px grey;\n\n}\n.buttons {\n    width: 100%;\n    display: flex;\n    justify-content: space-evenly;\n}\n#edit-task-main-content {\n    grid-row: 2 / 11;\n    grid-column: 1 / 4;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n#edit-task-sidebar {\n    grid-row: 2 / 11;\n    grid-column: 4 / 5;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.delete-task-button {\n    grid-column: 4 / 5;\n}\n.form-entry {\n    max-width: 70%;\n    border: none;\n    border-radius: 10px;\n    padding: 10px;\n}\nlabel {\n    font-size: 16px;\n    font-weight: bold;\n    font-style: italic;\n}\ntextarea {\n    resize: none;\n}\n#newTaskDescription {\n    height: 40%;\n    width: 80%\n}\n.taskTitle {\n    min-height: 10%;\n}\n.taskDescription, .taskNotes {\n    min-height: 100px;\n    max-height: 35%;\n}\n.category-name:hover {\n    border-radius:15px;\n    background-color: whitesmoke;\n}\n#priority > option {\n    display: flex;\n    justify-content: space-evenly;\n    height: .5rem;\n    width: .5rem;\n}\n.P1 {\n    background-color: rgba(255, 70, 70, .5);\n}\n.P2 {\n    background-color: rgba(255, 252, 96, .5);\n}\n.P3 {\n    background-color: rgba(28, 119, 195, .5);\n}\n\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,6DAAiE;AACrE;AACA;IACI;QACI,0BAA0B;IAC9B;AACJ;AACA;IACI,SAAS;IACT,qBAAqB;AACzB;AACA;IACI,eAAe;AACnB;AACA;IACI,eAAe;IACf,aAAa;IACb,uCAAuC;IACvC,UAAU;IACV,OAAO;IACP,MAAM;IACN,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,6BAA6B;IAC7B,iBAAiB;AACrB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,gBAAgB;IAChB,eAAe;IACf,yBAAyB;AAC7B;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB;AACA;IACI,YAAY;IACZ,kBAAkB;IAClB,UAAU;AACd;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;IACZ,UAAU;AACd;AACA;IACI,SAAS;AACb;AACA;IACI,aAAa;IACb,iBAAiB;IACjB,mBAAmB;IACnB,UAAU;IACV,UAAU;;AAEd;AACA;IACI,aAAa;IACb,iBAAiB;IACjB,uBAAuB;IACvB,QAAQ;IACR,cAAc;IACd,cAAc;IACd,gBAAgB;IAChB,qBAAqB;IACrB,kBAAkB;IAClB,0BAA0B;IAC1B,6BAA6B;IAC7B,gBAAgB;IAChB,aAAa;AACjB;AACA;IACI,0BAA0B;AAC9B;AACA;IACI,6BAA6B;AACjC;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,4BAA4B;IAC5B,YAAY;IACZ,cAAc;IACd,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,uBAAuB;AAC3B;AACA;IACI,UAAU;IACV,gBAAgB;IAChB,YAAY;AAChB;AACA;IACI,2CAA2C;IAC3C,2BAA2B;AAC/B;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;IACZ,WAAW;IACX,UAAU;AACd;AACA;IACI,UAAU;IACV,UAAU;IACV,SAAS;IACT,qBAAqB;AACzB;AACA;IACI,aAAa;IACb,qCAAqC;IACrC,mCAAmC;IACnC,4BAA4B;IAC5B,YAAY;IACZ,cAAc;IACd,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,uBAAuB;AAC3B;AACA;IACI,mBAAmB;IACnB,eAAe;AACnB;AACA;IACI,gBAAgB;AACpB;AACA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,YAAY;IACZ,kBAAkB;AACtB;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,eAAe;IACf,kBAAkB;IAClB,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;;AAEjC;AACA;IACI,WAAW;IACX,aAAa;IACb,6BAA6B;AACjC;AACA;IACI,gBAAgB;IAChB,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,gBAAgB;IAChB,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,kBAAkB;AACtB;AACA;IACI,cAAc;IACd,YAAY;IACZ,mBAAmB;IACnB,aAAa;AACjB;AACA;IACI,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;AACA;IACI,YAAY;AAChB;AACA;IACI,WAAW;IACX;AACJ;AACA;IACI,eAAe;AACnB;AACA;IACI,iBAAiB;IACjB,eAAe;AACnB;AACA;IACI,kBAAkB;IAClB,4BAA4B;AAChC;AACA;IACI,aAAa;IACb,6BAA6B;IAC7B,aAAa;IACb,YAAY;AAChB;AACA;IACI,uCAAuC;AAC3C;AACA;IACI,wCAAwC;AAC5C;AACA;IACI,wCAAwC;AAC5C",sourcesContent:["@font-face {\n    font-family: 'Oswald';\n    src: url('./fonts/Oswald-VariableFont_wght.ttf') format(truetype);\n}\n@keyframes selecting {\n    to {\n        transform: scale(1.2, 1.2);\n    }\n}\nbody {\n    margin: 0;\n    font-family: 'Oswald';\n}\nli {\n    cursor: pointer;\n}\n.overlay {\n    position: fixed;\n    display: none;\n    background-color: rgba(104,104,104,0.8);\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n#content {\n    display: grid;\n    grid-template-columns: 2fr 5fr;\n    grid-template-rows: .75fr 9fr;\n    min-height: 100vh;\n}\nheader {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    font-weight: 400;\n    font-size: 36px;\n    background-color: #3777FF;\n}\n.categories {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    background-color: #e7e5e4;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n}\n.category-name {\n    padding: 2px;\n    padding-left: 10px;\n    width: 80%;\n}\n.items {\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n    background-color: #fcfcfc;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.category-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 15px;\n    height: 70vh;\n    width: 80%;\n}\n.category-title {\n    margin: 0;\n}\n.list-container {\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    width: 90%;\n    padding: 0;\n    \n}\n.task-item {\n    display: flex;\n    flex-flow: column;\n    align-items: flex-start;\n    gap:10px;\n    flex-shrink: 1;\n    min-width: 75%;\n    max-height: 15vh;\n    border:2px grey solid;\n    border-radius: 3px;\n    border-top: 1px grey solid;\n    border-bottom: 1px grey solid;\n    margin-bottom: 0;\n    padding: 1rem;\n}\n.list-container > li:first-child {\n    border-top: 2px grey solid;\n}\n.list-container > li:nth-last-child(2) {\n    border-bottom: 2px grey solid;\n}\n.item-container{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 40vw;\n    height: 40vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\n.newTaskButton {\n    width: 25%;\n    min-width: 100px;\n    margin: 10px;\n}\n.newTaskButton:hover{\n    animation: selecting .5s infinite alternate;\n    /* transform: scale(1.5); */\n}\n.newCategoryButton {\n    margin: .8rem;\n}\n.taskDescription {\n    resize: none;\n    height: 80%;\n    width: 90%;\n}\n.category-list {\n    width: 80%;\n    padding: 0;\n    gap: 25px;\n    list-style-type: none;\n}\n.view-task-container{\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n    background-color: whitesmoke;\n    margin: auto;\n    padding: 1.5em;\n    width: 60vw;\n    height: 70vh;\n    font-size: 1.5rem;\n    border: 2px black solid;\n}\nbutton {\n    border-radius: 10px;\n    cursor: pointer;\n}\n.edit-task-button, .delete-task-button {\n    margin-top: 10px;\n}\n.icons {\n    width: 30px;\n    height: 30px;\n}\n.cancel-button, .edit-task-button, .delete-task-button, .newTaskButton, .newCategoryButton{\n    border: none;\n    background:inherit;\n}\n.add-task-button {\n    background-color: #3777FF;\n}\n#edit-task-header {\n    grid-row: 1 / 2;\n    grid-column: 1 / 5;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    margin-bottom: 10px;\n    border-bottom: solid 2px grey;\n\n}\n.buttons {\n    width: 100%;\n    display: flex;\n    justify-content: space-evenly;\n}\n#edit-task-main-content {\n    grid-row: 2 / 11;\n    grid-column: 1 / 4;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n#edit-task-sidebar {\n    grid-row: 2 / 11;\n    grid-column: 4 / 5;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n.delete-task-button {\n    grid-column: 4 / 5;\n}\n.form-entry {\n    max-width: 70%;\n    border: none;\n    border-radius: 10px;\n    padding: 10px;\n}\nlabel {\n    font-size: 16px;\n    font-weight: bold;\n    font-style: italic;\n}\ntextarea {\n    resize: none;\n}\n#newTaskDescription {\n    height: 40%;\n    width: 80%\n}\n.taskTitle {\n    min-height: 10%;\n}\n.taskDescription, .taskNotes {\n    min-height: 100px;\n    max-height: 35%;\n}\n.category-name:hover {\n    border-radius:15px;\n    background-color: whitesmoke;\n}\n#priority > option {\n    display: flex;\n    justify-content: space-evenly;\n    height: .5rem;\n    width: .5rem;\n}\n.P1 {\n    background-color: rgba(255, 70, 70, .5);\n}\n.P2 {\n    background-color: rgba(255, 252, 96, .5);\n}\n.P3 {\n    background-color: rgba(28, 119, 195, .5);\n}\n\n"],sourceRoot:""}]);const u=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],s=o.base?c[0]+o.base:c[0],l=i[s]||0,d="".concat(s," ").concat(l);i[s]=l+1;var u=t(d),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var p=r(m,o);o.byIndex=A,e.splice(A,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var c=o(n,r),s=0;s<i.length;s++){var l=t(i[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},428:(n,e,t)=>{n.exports=t.p+"46d7853f0185f6bf0c93.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{class n{constructor(n,e,t,o){this.title=n,this.description=e,this.dueDate=t,this.priority=o,this.status="To Do",this.notes="",this.checklist=[]}}class e{constructor(n){this.title=n,this.taskItems=[]}addItem(n){this.taskItems.push(n)}set allTasks(n){1==Array.isArray(n)&&(this.taskItems=n)}}function o(){const n={},t=JSON.parse(window.localStorage.getItem("categories"));for(const o in t){const r=new e(`${o}`),i=t[o].taskItems;for(const n of i)r.addItem(n);n[r.title]=r}return n}function r(n){const e=o()[n];window.localStorage.setItem("currentCategory",JSON.stringify(e))}function i(){const n=document.querySelector("#edit-taskTitle").value,e=document.querySelector("#edit-taskDescription").value,t=document.querySelector("#edit-taskNotes").value,o=document.querySelector("#taskStatus").value,r=document.querySelector("#priority").value,i=document.querySelector("#dueDate").value;return console.log({title:n,description:e,notes:t,status:o,priority:r,dueDate:i}),{title:n,description:e,notes:t,status:o,priority:r,dueDate:i}}var a=t(379),A=t.n(a),c=t(795),s=t.n(c),l=t(569),d=t.n(l),u=t(565),m=t.n(u),p=t(216),C=t.n(p),g=t(589),f=t.n(g),y=t(28),B={};let I,h,b,k;B.styleTagTransform=f(),B.setAttributes=m(),B.insert=d().bind(null,"head"),B.domAPI=s(),B.insertStyleElement=C(),A()(y.Z,B),y.Z&&y.Z.locals&&y.Z.locals;const w=document.querySelector("#content"),v=document.querySelector("#category-form"),x=document.querySelector("#new-task-form");if(function(n){const e=document.createElement("header");e.innerHTML="To Do's";const t=document.createElement("div"),o=document.createElement("div"),r=[e,t,o];t.classList.add("categories"),o.classList.add("items"),r.forEach((e=>{n.appendChild(e)})),function(){const n=document.querySelector(".categories"),e=document.createElement("button"),t=document.createElement("img");e.type="button",e.classList.add("newCategoryButton"),e.addEventListener("click",(()=>{document.querySelector("#category-overlay").style.display="flex"})),t.src="/src/images/plus.svg",t.alt="Add task icon",t.classList.add("icons"),e.appendChild(t),n.appendChild(e)}();const i=document.createElement("div"),a=document.createElement("h3"),A=document.createElement("ul");i.classList.add("category-container"),a.classList.add("category-title"),A.classList.add("list-container"),i.appendChild(a),i.appendChild(A),o.appendChild(i);const c=document.createElement("ul");c.classList.add("category-list"),t.appendChild(c)}(w),null==window.localStorage.getItem("categories")){const n={title:"Default",taskItems:[]};h={Default:n},I=new e(n.title),window.localStorage.setItem("categories",JSON.stringify(h)),window.localStorage.setItem("currentCategory",JSON.stringify(n))}else b=JSON.parse(window.localStorage.getItem("currentCategory")),k=JSON.parse(window.localStorage.getItem("categories")),I=new e(b.title),I.taskItems=b.taskItems,h=o();!function(n){const e=document.querySelector(".category-list");for(;e.firstChild;)e.removeChild(e.firstChild);for(const t in n){let n=document.createElement("li");n.classList.add("category-name"),n.innerHTML=`${t}`,e.appendChild(n)}}(h),function(n,e){const t=document.querySelector(".list-container"),o=document.querySelector(".category-title");for(;t.firstChild;)t.removeChild(t.firstChild);o.innerHTML=n,e.forEach((n=>{!function(n,e,t,o){const r=document.createElement("li"),i=document.createElement("div"),a=document.createElement("div");i.innerHTML=e,a.innerHTML=t,[i,a].forEach((n=>{r.appendChild(n)})),r.classList.add("task-item"),"P1"==o?r.classList.add("P1"):"P2"==o?r.classList.add("P2"):"P3"==o&&r.classList.add("P3"),n.appendChild(r)}(t,n.title,n.dueDate,n.priority)})),function(){const n=document.querySelector(".list-container"),e=document.createElement("button"),t=document.createElement("img");e.type="button",e.classList.add("newTaskButton"),e.addEventListener("click",(()=>{document.querySelector("#add-task-overlay").style.display="flex"})),t.src="/src/images/note-plus.svg",t.alt="Add task icon",t.classList.add("icons"),e.appendChild(t),n.appendChild(e)}()}(I.title,I.taskItems),v.onsubmit=()=>{!function(){const n=document.querySelector("#category-form"),e=document.querySelector("#category-overlay");!function(n){const e=o();e[n]={title:n,taskItems:[]},window.localStorage.categories=JSON.stringify(e)}(document.querySelector("#newCategoryTitle").value),n.reset(),location.reload(),e.style.display=""}()},x.onsubmit=()=>{!function(e){document.querySelector(".add-task-button");const t=document.querySelector("#new-task-form"),i=document.querySelector("#task-overlay"),a=e,A=function(){const n=document.querySelector("#newTaskTitle"),e=document.querySelector("#newTaskDescription"),t=document.querySelector("#taskDueDate");return{title:n.value,description:e.value,date:t.value}}(),c=new n(A.title,A.description,A.date);!function(n,e){const t=o();t[n].taskItems.push(e),window.localStorage.categories=JSON.stringify(t)}(a.title,c),r(a.title),t.reset(),location.reload(),i.style.display=""}(I)},function(){const n=document.querySelectorAll(".cancel-button, .modal-cancel-button"),e=document.querySelectorAll("form"),t=document.querySelectorAll(".overlay");n.forEach((n=>{n.addEventListener("click",(()=>{e.forEach((n=>{n.reset()})),t.forEach((n=>{n.style.display=""}))}))}))}(),function(n){document.querySelectorAll(".category-name").forEach((e=>{e.addEventListener("click",(()=>{r(n[`${e.innerHTML}`].title),location.reload()}))}))}(h),function(){const n=document.querySelectorAll(".task-item");let e=document.querySelector(".category-title");n.forEach((n=>{n.addEventListener("click",(()=>{const t=document.querySelector("#view-task-overlay"),r=document.querySelector("#category-title"),i=document.querySelector("#edit-taskTitle"),a=document.querySelector("#edit-taskDescription"),A=document.querySelector("#edit-taskNotes"),c=document.querySelector("#taskStatus"),s=document.querySelector("#priority"),l=document.querySelector("#dueDate");t.style.display="flex";const d=n.firstChild.innerHTML,u=function(n,e){const t=o()[n].taskItems;for(const n of t)if(n.title==e)return n}(e.innerHTML,d);r.innerHTML=e.innerHTML,i.value=u.title,a.value=u.description,A.value=u.notes,c.value=u.status,null==u.priority?s.value="P4":s.value=u.priority;const m=u.dueDate;console.log(String(m)),l.value=String(m)}))}))}(),function(n){const e=document.querySelector(".edit-task-button"),t=document.querySelector("#edit-task-form"),a=document.querySelector("#view-task-overlay");e.addEventListener("click",(()=>{const e=i();!function(n,e){const t=o(),r=t[n].taskItems;r.forEach(((n,t)=>{n.title==e.title&&(r[t]=e)})),t[n].taskItems=r,window.localStorage.categories=JSON.stringify(t)}(n.title,e),r(n.title),t.reset(),location.reload(),a.style.display=""}))}(I),function(n){const e=document.querySelector(".delete-task-button"),t=document.querySelector("#edit-task-form"),a=document.querySelector("#view-task-overlay");e.addEventListener("click",(()=>{const e=i();!function(n,e){const t=o(),r=t[n].taskItems;r.forEach(((n,t)=>{n.title==e.title&&r.splice(t,1)})),t[n].taskItems=r,window.localStorage.categories=JSON.stringify(t)}(n.title,e),r(n.title),t.reset(),location.reload(),a.style.display=""}))}(I)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,